---
import { getCollection } from 'astro:content';
import AsideLayout from '../../layouts/AsideLayout.astro';
import SEO from '../../layouts/SEO.astro';
import AsideNav from '../../components/AsideNav.astro';
import { parse } from 'marked';
import {
  devArticlesNavLinks,
  pubArticlesNavLinks,
} from '../../store/nav-links';
import DetailSlider from '../../components/ArticleSlider/DetailSlider.svelte';
import PreviewSlider from '../../components/ArticleSlider/PreviewSlider.svelte';
import ArticlePageInteractive from '../../components/ArticlePageInteractive.svelte';
import { Image } from 'astro:assets';

export async function getStaticPaths() {
  const servicesArticles = await getCollection('articles');

  return servicesArticles.map((article) => ({
    params: { servicesCategory: article.data.category, slug: article.slug },
    props: { article },
  }));
}
const { article } = Astro.props;
const { servicesCategory } = Astro.params;

const { title, description, gallery, thumbnail } = article.data;

const navLinks =
  servicesCategory === 'publishing'
    ? pubArticlesNavLinks
    : servicesCategory === 'development'
      ? devArticlesNavLinks
      : [];
---

<AsideLayout>
  <SEO
    slot="seo"
    {title}
    description={description || ''}
    imageUrls={{ fb: '' }}
  />
  <Fragment slot="aside">
    {!!navLinks.length && <AsideNav links={navLinks} />}
  </Fragment>
  <Fragment slot="main">
    {
      !!gallery?.length && (
        <>
          <DetailSlider data={gallery} client:load />
          <PreviewSlider data={gallery} client:load />
        </>
      )
    }
    {
      !!thumbnail?.src && !gallery?.length && (
        <img
          class="thumbnail"
          src={thumbnail.src}
          alt={thumbnail.alt || 'alt'}
        />
      )
    }
    <section class="prose detail">
      {description && <blockquote set:html={parse(description)} />}
      <Fragment set:html={parse(article.body)} />
    </section>

    <ArticlePageInteractive client:visible {article} />
  </Fragment>
</AsideLayout>

<style lang="scss">
  section {
    &:not(:first-child) {
      margin-top: 3rem;
    }
    margin-bottom: 3rem;
  }
  .thumbnail {
    box-shadow: var(--box-shadow-active);
    border: thin solid #555660;
    width: 100%;
    height: auto;
    aspect-ratio: 16 / 9;
    object-fit: cover;
    object-position: center;
  }
</style>
