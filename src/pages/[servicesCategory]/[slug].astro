---
import { getCollection } from 'astro:content';
import AsideLayout from '../../layouts/AsideLayout.astro';
import SEO from '../../layouts/SEO.astro';
import AsideNav from '../../components/AsideNav.astro';
import ModalTrigger from '../../components/modals/ModalTrigger.svelte';
import PublishingModalForm from '../../components/modals/PublishingModalForm.svelte';
import { parse } from 'marked';
import ServicesModalForm from '../../components/modals/ServicesModalForm.svelte';
import {
  devArticlesNavLinks,
  pubArticlesNavLinks,
} from '../../store/nav-links';
import DetailSlider from '../../components/ArticleSlider/DetailSlider.svelte';
import PreviewSlider from '../../components/ArticleSlider/PreviewSlider.svelte';

export async function getStaticPaths() {
  const servicesArticles = await getCollection('service-articles');

  return servicesArticles.map((article) => ({
    params: { servicesCategory: article.data.category, slug: article.slug },
    props: { article },
  }));
}
const { article } = Astro.props;
const { servicesCategory } = Astro.params;

const { title, description, gallery, category } = article.data;

const navLinks =
  servicesCategory === 'publishing'
    ? pubArticlesNavLinks
    : servicesCategory === 'development'
      ? devArticlesNavLinks
      : [];
---

<AsideLayout>
  <SEO slot="seo" {title} {description} imageUrls={{ fb: '' }} />
  <Fragment slot="aside">
    {!!navLinks.length && <AsideNav links={navLinks} />}
  </Fragment>
  <Fragment slot="main">
    {
      !!gallery.length && (
        <>
          <DetailSlider data={gallery} client:load />
          <PreviewSlider data={gallery} client:load />
        </>
      )
    }
    <section class="prose detail">
      <blockquote set:html={parse(article.data.description)} />
      <Fragment set:html={parse(article.body)} />
    </section>
    <div class="btns">
      <ModalTrigger
        client:visible
        type={category}
        variant="contrast"
        slug={article.slug}
      >
        Заказать
      </ModalTrigger>
    </div>
  </Fragment>
</AsideLayout>

{category === 'development' && <ServicesModalForm client:load />}
{category === 'publishing' && <PublishingModalForm client:load />}

<style lang="scss">
  section {
    &:not(:first-child) {
      margin-top: 3rem;
    }
    margin-bottom: 3rem;
  }
  @media (max-width: 1023.98px) {
    .btns {
      display: flex;
      justify-content: center;
    }
  }
</style>
