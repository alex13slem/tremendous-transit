---
import BasicLayout from '../../../layouts/BasicLayout.astro';
import SectGamesDetail from '../../../sections/SectGamesDetail/index.astro';
import SectCommon from '../../../sections/SectCommon.astro';
import GamesSlider from '../../../components/GamesSlider.svelte';

import SEO from '../../../layouts/SEO.astro';
import { bestGames, gamesWithRelations } from '../../../store/games';
import { getArtistBySlug } from '../../../store/artists';
import { TeamSlider } from '../../../components/TeamSlider';
import SectStages from '../../../sections/SectStages.astro';
import GamesHero from '../../../sections/GamesHero.svelte';

export async function getStaticPaths() {
  const paths = gamesWithRelations.map((game) => ({
    params: {
      slug: game.slug,
    },
    props: { game },
  }));
  return paths;
}

const { game } = Astro.props;
const { title, description } = game;

const seoImg = new URL(game.thumbnail, Astro.site);

const artists = !game.team?.length
  ? null
  : game.team.map((slug) => getArtistBySlug(slug));
---

<BasicLayout>
  <SEO slot="seo" {title} {description} imageUrls={{ fb: seoImg.toString() }} />

  <GamesHero {game} client:load />

  <SectGamesDetail {game} />

  {!!game.devStages?.length && <SectStages gameDevStages={game.devStages} />}

  {
    artists ? (
      <SectCommon title="Команда">
        <TeamSlider client:load {artists} />
      </SectCommon>
    ) : null
  }

  <SectCommon title="Наши игры">
    <GamesSlider games={bestGames} client:load />
  </SectCommon>
</BasicLayout>
